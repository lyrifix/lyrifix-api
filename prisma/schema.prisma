// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
  previewFeatures = ["relationJoins"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator zod {
  provider = "zod-prisma-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artist {
  id   String @id @default(ulid())
  slug String @unique

  name     String  @unique
  imageUrl String?

  songs Song[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Song {
  id   String @id @default(ulid())
  slug String @unique

  title    String
  imageUrl String?

  artists Artist[]
  lyrics  Lyric[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lyric {
  id   String @id @default(ulid())
  slug String @unique

  songId String
  song   Song   @relation(fields: [songId], references: [id], onDelete: Cascade)

  text String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id String @id @default(ulid())

  fullName String
  email    String @unique

  password Password?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @default(ulid())

  hash String

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
